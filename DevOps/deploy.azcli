# az login --use-device-code
# az account set --subscription b33f0285-db27-4896-ac5c-df22004b0aba

RG=AzureWebSampleDev
ENV=dev
LOC=westeurope

APP=$(./create-aad-appreg.sh AzureWebSampleUI)
API=$(./create-aad-api.sh AzureWebSampleAPI $(jq .appId -r <<< $APP))
ADMINGRP=$(az ad group list --display-name AzureAdmins | jq .[0].objectId -r)
TENANT=$(az account show | jq .tenantId -r)

# Deploy ARM Template for creating resource group
az deployment sub create --template-file deploy-rg.json --location $LOC \
  --parameters rgName=$RG location=$LOC

# Deploy ARM Template with app resources
RESULT=$(az deployment group create --resource-group $RG --template-file deploy.json --name $(date +%F_%H-%M-%S) \
    --parameters environment=$ENV sqlDbPasswordSeed=$(uuidgen) aadAminTeamId=$ADMINGRP \
                 aadTenantId=$TENANT apiClientId=$(jq .appId -r <<< $API) \
                 sqlIpException=$(dig +short myip.opendns.com @resolver1.opendns.com))

# Set minimal TLS version. Note that his is a workaround. For whatever reason, ARM deployment fails
# with a "bad request" error if minimal TLS version is set in ARM template.
az sql server update --resource-group $RG --name $(jq '.properties.outputs.sqlServerName.value' -r <<< $RESULT) \
  --minimal-tls-version 1.2

# Turn Blob Storage into static web host (currently not possible in ARM Template)
STATICSTG=$(jq '.properties.outputs.staticContentStorageName.value' -r <<< $RESULT)
az storage blob service-properties update --account-name $STATICSTG --static-website --404-document index.html --index-document index.html

SAS=$(jq '.properties.outputs.staticContentSas.value' -r <<< $RESULT)
echo SAS Token for uploading static web content: $SAS | sed "s/\&/\\\&/g" | sed "s/\%/\\\%/g"

WEBAPP=$(jq '.properties.outputs.webAppName.value' -r <<< $RESULT)
printf "Don't forget to create SQL user for web app's managed identity:\nCREATE USER [$WEBAPP] FROM EXTERNAL PROVIDER\nEXEC sp_addrolemember 'db_owner', [$WEBAPP]\n"

FUNCAPP=$(jq '.properties.outputs.funcAppName.value' -r <<< $RESULT)
FUNCKEY=$(az functionapp function keys list --resource-group $RG --name $FUNCAPP --function-name Add | jq .default -r)
